<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>使用Git LFS上传大文件步骤</title>
    <link href="/2023/%E4%BD%BF%E7%94%A8Git-LFS%E4%B8%8A%E4%BC%A0%E5%A4%A7%E6%96%87%E4%BB%B6%E6%AD%A5%E9%AA%A4/"/>
    <url>/2023/%E4%BD%BF%E7%94%A8Git-LFS%E4%B8%8A%E4%BC%A0%E5%A4%A7%E6%96%87%E4%BB%B6%E6%AD%A5%E9%AA%A4/</url>
    
    <content type="html"><![CDATA[<div class="cnblogs_Highlighter">&nbsp;</div><p>1.首先我们要先下载git lfs。<a href="https://git-lfs.github.com/" target="_blank">链接地址</a></p><p>2.我们需要安装git lfs，但是必须安装到git/bin下面。就是你安装git的时候，那个路径。可以看我的git安装路径：</p><p><img src="https://img2023.cnblogs.com/blog/1218402/202303/1218402-20230318212103264-1945101564.png" alt="" width="548" height="143" /></p><p>3.我们可以使用以下步骤进行大文件上传，因为github上传有大文件有100M的限制。但是在上传的过程中，可能会出现443：timeout，或者refused等错误，可以看我<a href="https://www.cnblogs.com/peixu/p/17231781.html" target="_blank">之前的一个博客</a>，里面写了解决方案。</p><div class="cnblogs_Highlighter"><pre class="brush:python;gutter:true;">首先进入到你的项目下，可以直接cmd。git init #创建本地仓库环境git lfs install # 安装大文件上传应用<br />#如果你之前已经向远端git过文件，并且已经安装使用过lfs。那么上述两个语句可以不用写git lfs track * #追踪要上传的大文件，*表示路劲下的所有文件。我们如果只上传nii文件，可以使用*.niigit add .gitattributes #添加上传的属性文件（要先上传属性文件，不然可能会失败）ps：我没写这句话，但是也上传成功了git commit -m "first commit"git remote add origin git@github.com:DreamOneYou/Liver_Tumor.gitgit push origin master #将本地仓库origin分支更新到远程仓库master分支下。这一步字第一次上传是很可能会报错：error：failed to push some refs to &ldquo;...&rdquo;。我们不用管，直接按照下面步骤继续就行git add * #添加要上传的大文件，*表示路劲下的所有文件git commit -m "first commit"# 添加大文件上传说明git push origin master #上传大文件</pre></div><p>　4、我们在上传大文件的过程中，可能会遇到已经执行&nbsp; git lfs track *.zip&nbsp; 等文件，之后使用&nbsp; git add * 向本地库添加文件。但是发现使用&nbsp; git lfs status&nbsp; 时发现，没有跟踪到任何文件。对于这种情况。我采用了最原始的方法，就是单个大文件上传。</p><div class="cnblogs_Highlighter"><pre class="brush:python;gutter:true;">git lfs track *.zipgit add models/LITS_UNet_MAT_HDC/20221003_121927_MAT_HDC_Centerline/model.zipgit commit -m "upload best model"git push origin master #有时候会遇到这一步执行成功了，但是远端没有更新。我们只需要在执行一次这个语句就行</pre></div><p>5、当需要clone远端文件和大文件时，可以按照以下步骤：</p><div class="cnblogs_Highlighter"><pre class="brush:python;gutter:true;">git clone git@github.com:DreamOneYous/Hepatic_vessel.gitgit lfs pull # 拉取所有lfs上传的大文件<p>git lfs pull –include&#x3D;&lt;file_path&gt; # 可以指定拉取某个大文件<br></pre></p></div><p>&nbsp;6、如果克隆远端仓库的同时，还要克隆远端仓库中的子模块（其他仓库文件），可以采用下面语句：</p><div class="cnblogs_Highlighter"><pre class="brush:python;gutter:true;">git clone --recursive URL # 第一种：让 Git 在克隆仓库时同时下载所有子模块的代码git submodule update #第二种：进入每个子模块的目录中，分别执行 git submodule update 命令来下载子模块中的代码</pre></div><p>　　</p><p>&nbsp;</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>视频编辑软件特效</title>
    <link href="/2023/%E8%A7%86%E5%B1%8F%E7%BC%96%E8%BE%91%E8%BD%AF%E4%BB%B6%E7%89%B9%E6%95%88/"/>
    <url>/2023/%E8%A7%86%E5%B1%8F%E7%BC%96%E8%BE%91%E8%BD%AF%E4%BB%B6%E7%89%B9%E6%95%88/</url>
    
    <content type="html"><![CDATA[<h1 id="视频软件常用特效"><a href="#视频软件常用特效" class="headerlink" title="视频软件常用特效"></a>视频软件常用特效</h1><ul><li><p>颜色校正：可以调整视频的色彩、对比度、曝光度等，使视频效果更好。</p></li><li><p>转场特效：通过添加转场特效来改变视频段之间的平滑度和流畅度，常见的转场特效包括淡入淡出、擦除、扭曲等。</p></li><li><p>滤镜特效：通过添加不同的滤镜特效来改变视频的色彩、亮度、对比度等，常见的滤镜特效包括黑白、冷色、暖色等。</p></li><li><p>文字和标题：可以在视频中添加文字和标题，以增强视频的信息传达效果。</p></li><li><p>图片和音乐：可以将图片和音乐添加到视频中，以增强视频的视觉和听觉效果。</p></li><li><p>特殊效果：如动画、形状、粒子等特殊效果，可以为视频增添创意和艺术性。</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>视频软件特效</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何使用Waline评论</title>
    <link href="/2023/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Waline%E8%AF%84%E8%AE%BA/"/>
    <url>/2023/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Waline%E8%AF%84%E8%AE%BA/</url>
    
    <content type="html"><![CDATA[<h2 id="为什么选择Waline评论"><a href="#为什么选择Waline评论" class="headerlink" title="为什么选择Waline评论"></a>为什么选择Waline评论</h2><p>刚开始选择valine，但是网上有人说valine评论不安全，比如：评论者和自己的IP和邮箱等信息容易被泄露（ps：这是我从valine换到waline的重点原因）。还有一个原因就是很容易被发送垃圾信息，因为他没有一个注册功能，只要是个人，就可以随便发评论。</p><ul><li>选择国际版的<strong>缺点</strong>：就是只能用外网评论，很尴尬啊，我面向的是国内啊。等我的域名备案了，在转向国内吧。</li></ul><h2 id="开始配置（基于Valine进行迁移）"><a href="#开始配置（基于Valine进行迁移）" class="headerlink" title="开始配置（基于Valine进行迁移）"></a>开始配置（基于Valine进行迁移）</h2><h3 id="LeanCloud配置（数据库）"><a href="#LeanCloud配置（数据库）" class="headerlink" title="LeanCloud配置（数据库）"></a>LeanCloud配置（数据库）</h3><ul><li>这个我选择的是<a href="https://console.leancloud.app/">国际版</a>，这样后面的那个<code>LEAN_SERVER</code>就可以不用配置了。ps：主要我买的域名还没有备案，只能先选择国际版了。</li><li>进入到链接里面，就可以开始注册账户。注册完了之后进如控制台,点击创建应用，选择开发版就行，毕竟就这个版本不要money。之后进入设置（setting）找到 <code>APP ID,APP Key 和 Master Key</code> ,因为后面需要用到。<br><img src="/img/post/Waline%E5%8D%9A%E5%AE%A2%E8%AF%84%E8%AE%BA%E9%85%8D%E7%BD%AE/1.png" alt="LeanCloud"><br><img src="/img/post/Waline%E5%8D%9A%E5%AE%A2%E8%AF%84%E8%AE%BA%E9%85%8D%E7%BD%AE/2.png" alt="LeanCloud1"></li></ul><h3 id="Vercel配置（服务端）"><a href="#Vercel配置（服务端）" class="headerlink" title="Vercel配置（服务端）"></a>Vercel配置（服务端）</h3><ul><li>点击<a href="https://vercel.com/new/clone">部署</a>,你可以选择使用GitHub快捷登录。</li><li>创建项目并点击Create继续,此时 Vercel 会基于 Waline 模板帮助你新建并初始化仓库，仓库名为你之前输入的项目名。<br><img src="/img/post/Waline%E5%8D%9A%E5%AE%A2%E8%AF%84%E8%AE%BA%E9%85%8D%E7%BD%AE/3.png" alt="Vercel3"></li><li>一两分钟后，满屏的烟花会庆祝你部署成功。此时点击 <code>Go to Dashboard</code> 可以跳转到应用的控制台。<br><img src="/img/post/Waline%E5%8D%9A%E5%AE%A2%E8%AF%84%E8%AE%BA%E9%85%8D%E7%BD%AE/4.png" alt="Vercel4"></li><li>点击顶部的 <code>Settings - Environment Variables </code>进入环境变量配置页，并配置三个环境变量 <code>LEAN_ID, LEAN_KEY 和 LEAN_MASTER_KEY </code>。它们的值分别对应上一步在 LeanCloud 中获得的 <code>APP ID, APP KEY, Master Key</code>。<br><img src="/img/post/Waline%E5%8D%9A%E5%AE%A2%E8%AF%84%E8%AE%BA%E9%85%8D%E7%BD%AE/5.png" alt="Vercel5"></li><li>环境变量配置完成之后点击顶部的<code>Deployments</code>点击顶部最新的一次部署右侧的 <code>Redeploy </code>按钮进行重新部署。该步骤是为了让刚才设置的环境变量生效。<br><img src="/img/post/Waline%E5%8D%9A%E5%AE%A2%E8%AF%84%E8%AE%BA%E9%85%8D%E7%BD%AE/6.png" alt="Vercel6"></li><li>此时会跳转到 <code>Overview </code>界面开始部署，等待片刻后 <code>STATUS </code>会变成<code> Ready</code>。此时请点击<code>Visit</code>，即可跳转到部署好的网站地址，此地址即为你的服务端地址。<br><img src="/img/post/Waline%E5%8D%9A%E5%AE%A2%E8%AF%84%E8%AE%BA%E9%85%8D%E7%BD%AE/7.png" alt="Vercel7"></li></ul><h3 id="hexo主题（我用的是Fluid主题）中配置"><a href="#hexo主题（我用的是Fluid主题）中配置" class="headerlink" title="hexo主题（我用的是Fluid主题）中配置"></a>hexo主题（我用的是Fluid主题）中配置</h3><ul><li>进入到主题中的<code>_config.yml</code>修改 <code>serverURL</code>,这里的serverURL值必须写你Vercel生成的<code>DOMAINS</code>的<code>.app</code>那个链接。<br><img src="/img/post/Waline%E5%8D%9A%E5%AE%A2%E8%AF%84%E8%AE%BA%E9%85%8D%E7%BD%AE/8.png" alt="hexo8"></li><li>在Fluid主题中，需要修改<code>themes\fluid\layout\_partials\plugins\waline.ejs</code>文件。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python">&lt;head&gt;<br>    &lt;!-- ... --&gt;<br>    &lt;link<br>      rel=<span class="hljs-string">&quot;stylesheet&quot;</span><br>      href=<span class="hljs-string">&quot;https://unpkg.com/@waline/client@v2/dist/waline.css&quot;</span><br>    /&gt;<br>    &lt;!-- ... --&gt;<br>  &lt;/head&gt;<br>  &lt;body&gt;<br>    &lt;!-- ... --&gt;<br>    &lt;div <span class="hljs-built_in">id</span>=<span class="hljs-string">&quot;waline&quot;</span>&gt;&lt;/div&gt;<br>    &lt;script <span class="hljs-built_in">type</span>=<span class="hljs-string">&quot;module&quot;</span>&gt;<br>      <span class="hljs-keyword">import</span> &#123; init &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;https://unpkg.com/@waline/client@v2/dist/waline.mjs&#x27;</span>;<br>  <br>      init(&#123;<br>        el: <span class="hljs-string">&#x27;#waline&#x27;</span>,<br>        serverURL: <span class="hljs-string">&#x27;https://dream-one-you-github-io.vercel.app&#x27;</span>,<br>      &#125;);<br>    &lt;/script&gt;<br>  &lt;/body&gt;<br></code></pre></td></tr></table></figure></li></ul><h3 id="评论管理"><a href="#评论管理" class="headerlink" title="评论管理"></a>评论管理</h3><ul><li>部署完成后，在<code>&lt;serverURL&gt;/ui/register</code>进行注册。第一个注册的人被设定为管理员。</li><li>管理员可管理评论。</li><li>用户可通过评论框<code>注册账号</code>，登录后可跳转至自己的评论页。</li></ul><h3 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h3><ul><li><a href="https://waline.js.org/guide/get-started/">Waline</a></li><li><a href="https://blog.csdn.net/hubojing/article/details/122659549">博客更换为Waline评论系统</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>waline</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo搭建github博客</title>
    <link href="/2023/hexo%E6%90%AD%E5%BB%BAgithub%E5%8D%9A%E5%AE%A2/"/>
    <url>/2023/hexo%E6%90%AD%E5%BB%BAgithub%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p>1、你必须建一个存储库，这个存储库要和你的github名称一致（不然就会404），如下图：<br><img src="/img/hexo%E6%90%AD%E5%BB%BAgithub%E5%8D%9A%E5%AE%A2/1.png"></p><p>2、如果是window配置，需要安装git和<a href="https://nodejs.org/en/download">node.js</a></p><p>3、下载hexo</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">npm config <span class="hljs-built_in">set</span> registry https://registry.npm.taobao.org  <span class="hljs-comment">#换源，下载hexo快一点</span><br>npm install hexo-cli -g  <span class="hljs-comment">#进行下载</span><br></code></pre></td></tr></table></figure><p>4、在本地进行hexo部署:hexo init</p><p>5、执行 <code>npm install</code>，如果不行，可以执行这句：<code>npm install - save</code></p><p>6、执行这段代码：<code>npm install hexo-deployer-git --save</code></p><p>7、分别输入  <code>git config --global user.name &quot;你的昵称&quot;</code>  和  <code>git config --global user.email &quot;你的邮箱&quot;</code> 并替换为你的昵称（我的就是DreamOneYou）和邮箱</p><p>8、获取ssh，可以在Git GUI Here进行查看。然后到你的github设置下，找到ssh key设置。<br><img src="/img/hexo%E6%90%AD%E5%BB%BAgithub%E5%8D%9A%E5%AE%A2/gitgui.png"></p><p>9、找到你安装博客的文件夹找到_config.yml配置文件并打开（可以用Notepad++也可以用记事本打开）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">deploy:<br>  <span class="hljs-built_in">type</span>: git<br>  repository: 你复制的ssh<br>  branch: master<br></code></pre></td></tr></table></figure><p>10、之后依次执行进行上传：<code>hexo clean</code>; <code>hexo g</code>; <code>hexo d</code>;如果你想本地看一下效果，可以执行：<code>hexo s</code></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>如何利用github搭建博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>视频软件介绍</title>
    <link href="/2023/%E5%90%84%E7%A7%8D%E8%A7%86%E9%A2%91%E7%89%B9%E6%95%88%E6%80%BB%E7%BB%93/"/>
    <url>/2023/%E5%90%84%E7%A7%8D%E8%A7%86%E9%A2%91%E7%89%B9%E6%95%88%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h2 id="一些视频软件"><a href="#一些视频软件" class="headerlink" title="一些视频软件"></a>一些视频软件</h2><ul><li>整体最佳、功能最强的视频编辑软件：Adobe Premiere Pro CC</li><li>物美价廉的中文视频编辑软件：蜜蜂剪辑（Beecut）</li><li>最适合Apple Mac的视频编辑软件：Apple Final Cut Pro X</li><li>适合初学者的视频编辑软件：Corel VideoStudio Ultimate</li><li>价格实惠的视频剪辑软件：Adobe Premiere Elements 2020</li><li>适合制作电影效果的视频编辑软件：CyberLink PowerDirector</li><li>编辑速度快的视频编辑软件：Ulead Video Studio</li><li>一款适合Mac的视频剪辑软件：DaVinci Resolve</li><li>最受欢迎的家庭视频剪辑软件：Magix Movie Edit Pro Premium</li><li>免费的苹果系统视频编辑软件：Apple iMovie</li><li>最佳快速视频编辑软件：Movavi Video Editor</li><li>最佳预算视频编辑软件：Wondershare Filmora</li><li>最佳细节调整视频编辑软件：Vegas Pro</li><li>最佳移动客户端视频编辑软件：Adobe Premiere Rush</li><li>最佳小型企业适用视频编辑软件：Vimeo</li><li>录屏+视频编辑软件二合一：Camtasia</li><li>最佳免费视频剪辑软件：Lightworks</li><li>免费好用的视频剪辑软件：OpenShot</li><li>最佳简洁界面视频编辑软件：Shotcut</li><li>最佳性价比专业级视频编辑软件：Blender</li><li>最佳Windows自带视频编辑软件：Windows Video Editor</li><li>最佳在线视频编辑软件：WeVideo</li><li>最佳专业性移动视频编辑软件：KineMaster</li><li>最适合社交媒体使用者的视频编辑软件：Magisto</li><li>最佳画面色彩视频编辑软件：Pinnacle Studio Ultimate</li><li>最佳业余爱好者适用视频编辑软件： HitFilm Pro 和 HitFilm Express</li><li>最佳Windows系统适用视频编辑软件：VideoPad</li></ul>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>视频软件</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
